name: CMake

on: push
    
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        include:
          - os: windows-latest
            outputfile: Release/VideoMixer.exe
            releasefile: VideoMixer.exe
          
    steps:
    - uses: actions/checkout@v3
    
    - name: Install GStreamer
      run:   |
         Import-Module "$env:ChocolateyInstall/helpers/chocolateyInstaller.psm1"
         choco uninstall strawberryperl
         choco install gstreamer-devel
         refreshenv
         Copy-Item "${{github.workspace}}/tools/pkg-config.exe" -Destination "$Env:GSTREAMER_1_0_ROOT_MSVC_X86_64\bin\"
         "$Env:GSTREAMER_1_0_ROOT_MSVC_X86_64\bin\" >> $env:GITHUB_PATH
         refreshenv         
      shell: pwsh

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
      shell: pwsh

    - name: Build
      # Build your program with the given configuration
      run: |
        cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
        cp ${{github.workspace}}/build/${{ matrix.outputfile }} ${{ matrix.releasefile }}
        ls
      shell: pwsh

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
      shell: pwsh
      
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        # Artifact name
        name: VideoMixer
        # A file, directory or wildcard pattern that describes what to upload
        path: ${{ matrix.releasefile }}
        
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ${{ matrix.releasefile }}
